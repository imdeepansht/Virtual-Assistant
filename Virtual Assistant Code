import pyttsx3 #pip install pyttsx3
import speech_recognition as sr #pip install speechRecognition
import datetime
import wikipedia #pip install wikipedia
import webbrowser
import os
import smtplib
import pytz
import pycricbuzz
import random


engine = pyttsx3.init('sapi5')
voices = engine.getProperty('voices')
# print(voices[0].id)
engine.setProperty('voice', voices[1].id)
def speak(audio):
    engine.say(audio)
    engine.runAndWait()


def wishMe():
    hour = int(datetime.datetime.now().hour)
    if hour>=0 and hour<12:
        speak("Good Morning,sir!")

    elif hour>=12 and hour<18:
        speak("Good Afternoon,sir!")

    else:
        speak("Good Evening,sir!")

    speak("This is FRIDAY. How can I serve you?")

def takeCommand():
    #It takes microphone input from the user and returns string output

    r = sr.Recognizer()
    with sr.Microphone() as source:
        print("Listening...")
        r.pause_threshold = 1
        audio = r.listen(source)

    try:
        print("Recognizing...")
        query = r.recognize_google(audio, language='en-in')
        print("User said:  ", query)

    except Exception as e:
        # print(e)
        speak("say that again please...")
        return "None"
    return query

def sendEmail(to, content):
    server = smtplib.SMTP('smtp.gmail.com', 587)
    server.ehlo()
    server.starttls()
    server.login('youremail@email.com', 'password')
    server.sendmail(takeCommand(), to, content)
    server.close()

if __name__ == "__main__":
    wishMe()
    while True:
    # if 1:
        query = takeCommand().lower()

        # Logic for executing tasks based on query
        if 'wikipedia' in query:
            speak('Searching Wikipedia...')
            query = query.replace("wikipedia", "")
            results = wikipedia.summary(query, sentences=2)
            speak("According to Wikipedia")
            print(results)
            speak(results)

 


        elif 'open youtube' in query:
            speak("opening youtube")
            webbrowser.open("https://youtube.com/")

        elif 'open Gmail' in query:
            speak("opening Gmail")
            webbrowser.open("https://gmail.com/")

        elif 'open google' in query:
            speak("opening google")
            webbrowser.open("https://google.com/")

        elif 'open stackoverflow' in query:
            speak("opening stackoverflow")
            webbrowser.open("https://stackoverflow.com/")

        elif 'open cricbuzz' in query:
            speak("Opening cricbuzz")
            webbrowser.open("https://cricbuzz.com/")

        elif 'open whatsapp' in query:
           speak("opening WhatsApp")
           webbrowser.open("https://web.whatsapp.com/")
       
        
        elif 'mail to me' in query:
            try:
                speak("What should I say?")
                content = takeCommand()
                to = "email@email.com"    
                sendEmail(to, content)
                speak("Sir, the email has been succesfully sent!")
            except Exception as e:
                print(e)
                speak("Sorry sir. I am not able to send this email")
            
        
       
